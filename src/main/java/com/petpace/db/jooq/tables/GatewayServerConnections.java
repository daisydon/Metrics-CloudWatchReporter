/**
 * This class is generated by jOOQ
 */
package com.petpace.db.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GatewayServerConnections extends org.jooq.impl.TableImpl<com.petpace.db.jooq.tables.records.GatewayServerConnectionsRecord> {

	private static final long serialVersionUID = -1010558655;

	/**
	 * The singleton instance of <code>sirius.gateway_server_connections</code>
	 */
	public static final com.petpace.db.jooq.tables.GatewayServerConnections GATEWAY_SERVER_CONNECTIONS = new com.petpace.db.jooq.tables.GatewayServerConnections();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.petpace.db.jooq.tables.records.GatewayServerConnectionsRecord> getRecordType() {
		return com.petpace.db.jooq.tables.records.GatewayServerConnectionsRecord.class;
	}

	/**
	 * The column <code>sirius.gateway_server_connections.isActive</code>. 
	 */
	public final org.jooq.TableField<com.petpace.db.jooq.tables.records.GatewayServerConnectionsRecord, java.lang.Short> ISACTIVE = createField("isActive", org.jooq.impl.SQLDataType.SMALLINT, this);

	/**
	 * The column <code>sirius.gateway_server_connections.connectTime</code>. 
	 */
	public final org.jooq.TableField<com.petpace.db.jooq.tables.records.GatewayServerConnectionsRecord, java.sql.Timestamp> CONNECTTIME = createField("connectTime", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>sirius.gateway_server_connections.GatewayID</code>. 
	 */
	public final org.jooq.TableField<com.petpace.db.jooq.tables.records.GatewayServerConnectionsRecord, java.lang.Integer> GATEWAYID = createField("GatewayID", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>sirius.gateway_server_connections.ServerID</code>. 
	 */
	public final org.jooq.TableField<com.petpace.db.jooq.tables.records.GatewayServerConnectionsRecord, java.lang.Integer> SERVERID = createField("ServerID", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * Create a <code>sirius.gateway_server_connections</code> table reference
	 */
	public GatewayServerConnections() {
		super("gateway_server_connections", com.petpace.db.jooq.Sirius.SIRIUS);
	}

	/**
	 * Create an aliased <code>sirius.gateway_server_connections</code> table reference
	 */
	public GatewayServerConnections(java.lang.String alias) {
		super(alias, com.petpace.db.jooq.Sirius.SIRIUS, com.petpace.db.jooq.tables.GatewayServerConnections.GATEWAY_SERVER_CONNECTIONS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.petpace.db.jooq.tables.records.GatewayServerConnectionsRecord> getPrimaryKey() {
		return com.petpace.db.jooq.Keys.KEY_GATEWAY_SERVER_CONNECTIONS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.petpace.db.jooq.tables.records.GatewayServerConnectionsRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.petpace.db.jooq.tables.records.GatewayServerConnectionsRecord>>asList(com.petpace.db.jooq.Keys.KEY_GATEWAY_SERVER_CONNECTIONS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<com.petpace.db.jooq.tables.records.GatewayServerConnectionsRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<com.petpace.db.jooq.tables.records.GatewayServerConnectionsRecord, ?>>asList(com.petpace.db.jooq.Keys.FK_8E5FFFEC3E73E37, com.petpace.db.jooq.Keys.FK_8E5FFFE5CFA3B61);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.petpace.db.jooq.tables.GatewayServerConnections as(java.lang.String alias) {
		return new com.petpace.db.jooq.tables.GatewayServerConnections(alias);
	}
}
