/**
 * This class is generated by jOOQ
 */
package com.petpace.db.jooq.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RemoteLoginsDao extends org.jooq.impl.DAOImpl<com.petpace.db.jooq.tables.records.RemoteLoginsRecord, com.petpace.db.jooq.tables.pojos.RemoteLogins, java.lang.Integer> {

	/**
	 * Create a new RemoteLoginsDao without any configuration
	 */
	public RemoteLoginsDao() {
		super(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS, com.petpace.db.jooq.tables.pojos.RemoteLogins.class);
	}

	/**
	 * Create a new RemoteLoginsDao with an attached configuration
	 */
	public RemoteLoginsDao(org.jooq.Configuration configuration) {
		super(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS, com.petpace.db.jooq.tables.pojos.RemoteLogins.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(com.petpace.db.jooq.tables.pojos.RemoteLogins object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<com.petpace.db.jooq.tables.pojos.RemoteLogins> fetchById(java.lang.Integer... values) {
		return fetch(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public com.petpace.db.jooq.tables.pojos.RemoteLogins fetchOneById(java.lang.Integer value) {
		return fetchOne(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS.ID, value);
	}

	/**
	 * Fetch records that have <code>collar_id IN (values)</code>
	 */
	public java.util.List<com.petpace.db.jooq.tables.pojos.RemoteLogins> fetchByCollarId(java.lang.String... values) {
		return fetch(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS.COLLAR_ID, values);
	}

	/**
	 * Fetch records that have <code>pet_id IN (values)</code>
	 */
	public java.util.List<com.petpace.db.jooq.tables.pojos.RemoteLogins> fetchByPetId(java.lang.Integer... values) {
		return fetch(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS.PET_ID, values);
	}

	/**
	 * Fetch records that have <code>account_id IN (values)</code>
	 */
	public java.util.List<com.petpace.db.jooq.tables.pojos.RemoteLogins> fetchByAccountId(java.lang.Integer... values) {
		return fetch(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS.ACCOUNT_ID, values);
	}

	/**
	 * Fetch records that have <code>start IN (values)</code>
	 */
	public java.util.List<com.petpace.db.jooq.tables.pojos.RemoteLogins> fetchByStart(java.sql.Timestamp... values) {
		return fetch(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS.START, values);
	}

	/**
	 * Fetch records that have <code>end IN (values)</code>
	 */
	public java.util.List<com.petpace.db.jooq.tables.pojos.RemoteLogins> fetchByEnd(java.sql.Timestamp... values) {
		return fetch(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS.END, values);
	}

	/**
	 * Fetch records that have <code>microtime IN (values)</code>
	 */
	public java.util.List<com.petpace.db.jooq.tables.pojos.RemoteLogins> fetchByMicrotime(java.lang.Double... values) {
		return fetch(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS.MICROTIME, values);
	}

	/**
	 * Fetch records that have <code>samplingFrequency IN (values)</code>
	 */
	public java.util.List<com.petpace.db.jooq.tables.pojos.RemoteLogins> fetchBySamplingfrequency(java.lang.String... values) {
		return fetch(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS.SAMPLINGFREQUENCY, values);
	}

	/**
	 * Fetch records that have <code>duration IN (values)</code>
	 */
	public java.util.List<com.petpace.db.jooq.tables.pojos.RemoteLogins> fetchByDuration(java.lang.Integer... values) {
		return fetch(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS.DURATION, values);
	}

	/**
	 * Fetch records that have <code>status IN (values)</code>
	 */
	public java.util.List<com.petpace.db.jooq.tables.pojos.RemoteLogins> fetchByStatus(java.lang.Integer... values) {
		return fetch(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS.STATUS, values);
	}

	/**
	 * Fetch records that have <code>notes IN (values)</code>
	 */
	public java.util.List<com.petpace.db.jooq.tables.pojos.RemoteLogins> fetchByNotes(java.lang.String... values) {
		return fetch(com.petpace.db.jooq.tables.RemoteLogins.REMOTE_LOGINS.NOTES, values);
	}
}
